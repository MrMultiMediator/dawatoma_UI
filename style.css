/* Since wrapper is a grid. Any of its child classes become grid items */
.wrapper2 {
  display: grid;
  grid-template-columns: repeat(4, 500px);
  /* grid-template-rows: auto auto; */
  grid-template-rows: repeat(3, 80px);
  grid-gap: 1px; /* Size of lines between cells */
  padding: 1px; /* Size of the line around the grid */
}

.a {
  background-color: #228B22; /* cells need a bg color for this to work */
  /* min-height: 100px; */
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 2;
}

.b {
  background-color: #228B22;
  border-bottom: 5px solid black;
  border-top: 5px solid black;
  border-left: 5px solid black;
  border-right: 5px solid black;
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

.b2 {
  background-color: #228B22;
  grid-column: 3 / 4;
  grid-row: 1 / 2;
}

.c {
  background-color: #228B22;
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}

/* Here, grid-column-start=2, grid-column-end=4 */
.d {
  background-color: #228B22; /* cells need a bg color for this to work */
  grid-column: 2 / 4;
  grid-row: 2 / 3;
}

.e {
  background-color: #228B22; /* cells need a bg color for this to work */
  grid-column: 1 / 2;
  grid-row: 3 / 4;
}

.f {
  background-color: #0000FF; /* cells need a bg color for this to work */
  grid-column: 2 / 4;
  grid-row: 3 / 4;
}

/* fr represents a fraction of the available space in the
   grid container */
.wrapper {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 4fr 1fr;
  grid-template-rows: 1fr 5fr;
  grid-column-gap: 2em;
  grid-row-gap: 20px;
}

.mainheader {
  grid-column: 1 / 3;
  grid-row: 1 / 2;
}

.content {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}

.panel {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
}

/* This defines the piano grid broadly. There are 108 notes, and 256 quarter beats. 4 beats = bar.
   Thus, there are 16 bars here. The remaining 256 x 108 .css classes representing each quarter beat
   for each note are stored in a separate .css file (piano_grid_py.css) and auto-generated by
   'gen_css.py'. This file and that other .css file are imported by the .html file. */
.piano_roll {
  position: absolute;
  display: grid;
  grid-template-columns: 35px repeat(256, 15px);
  grid-template-rows: repeat(108, 15px);
  /* grid-template-rows: repeat(108, 15px); */
  grid-gap: 1px; /* Size of lines between cells */
  padding: 1px; /* Size of the line around the grid */
}

/* This should be nested inside the piano_roll class at the html level so that the position becomes
   relative to the entire piano roll */
.note {
  --gg: 1px; /* grid-gap (same as in piano_roll)  */
  --row_num: 1;
  --col_num: 1;
  --width: 15px;
  --height: 15px;

  position: absolute;
  width: var(--width);
  height: var(--height);

  /* Formula: row_num*height + row_num*grid_gap + 1  # Rows start at index 0 */
  top: calc(var(--row_num)*var(--height) + calc(var(--row_num)*var(--gg)) + 1px);
  /* Formula: 35 + col_num*width + col_num*grid_gap + 2 # Have to add 2 b/c the label column also
  has grid gaps/spacing. 35 is width of label column */
  left: calc(35px + var(--col_num)*var(--width) + var(--col_num)*var(--gg) + 2px);
  background-color: green;
  z-index: 5;
}

.note_resizer {
  width: 3px;
  height: 15px;
  top: -15px;
  left: -50px;
  background-color: pink;
  z-index: 6;
}